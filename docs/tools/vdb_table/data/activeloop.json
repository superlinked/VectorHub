{
  "name": "Activeloop Deep Lake",
  "oss": {
    "support": "full",
    "source_url": "https://github.com/activeloopai/deeplake",
    "comment": "https://github.com/activeloopai/deeplake"
  },
  "managed_cloud": {
    "support": "full",
    "source_url": "",
    "comment": ""
  },
  "disk_index": {
    "support": "",
    "source_url": "",
    "comment": "None"
  },
  "multi_tenancy": {
    "support": "",
    "source_url": "",
    "comment": "None"
  },
  "embeddings_text": {
    "support": "",
    "source_url": "https://docs.activeloop.ai/quickstart",
    "comment": "https://docs.activeloop.ai/quickstart#creating-your-first-vector-store"
  },
  "metadata_filter": {
    "support": "",
    "source_url": "",
    "comment": "None"
  },
  "in_process": {
    "support": "full",
    "source_url": "",
    "comment": ""
  },
  "multi_vec": {
    "support": "full",
    "source_url": "https://docs.activeloop.ai/technical-details/data-layout",
    "comment": "https://docs.activeloop.ai/technical-details/data-layout"
  },
  "langchain": {
    "support": "full",
    "source_url": "https://python.langchain.com/docs/integrations/vectorstores/activeloop_deeplake",
    "comment": "https://python.langchain.com/docs/integrations/vectorstores/activeloop_deeplake"
  },
  "llamaindex": {
    "support": "full",
    "source_url": "https://docs.llamaindex.ai/en/stable/examples/vector_stores/DeepLakeIndexDemo.html",
    "comment": "https://docs.llamaindex.ai/en/stable/examples/vector_stores/DeepLakeIndexDemo.html"
  },
  "hybrid_search": {
    "support": "",
    "source_url": "https://docs.activeloop.ai/performance-features/querying-datasets/query-syntax",
    "comment": "While you can run embedding search + contains(text, 'keywoard') or multiple those (keyword search inside text tensor) since BM25 not available I wouldn't call a full hybrid search.  https://docs.activeloop.ai/performance-features/querying-datasets/query-syntax"
  },
  "bm25": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "sparse_vectors": {
    "support": "",
    "source_url": "",
    "comment": "None"
  },
  "full_text": {
    "support": "",
    "source_url": "",
    "comment": "None"
  },
  "facets": {
    "support": "",
    "source_url": "",
    "comment": "None"
  },
  "geo_search": {
    "support": "",
    "source_url": "",
    "comment": "None"
  },
  "doc_size": {
    "bytes": 0,
    "unlimited": false,
    "source_url": "",
    "comment": ""
  },
  "vector_dims": {
    "value": 0,
    "unlimited": false,
    "source_url": "",
    "comment": ""
  },
  "ephemeral": {
    "support": "",
    "source_url": "",
    "comment": "None"
  },
  "sharding": {
    "support": "",
    "source_url": "",
    "comment": "None"
  },
  "license": {
    "value": "None",
    "source_url": "",
    "comment": ""
  },
  "dev_languages": {
    "value": [
      "none"
    ],
    "source_url": "",
    "comment": ""
  },
  "github_stars": 0,
  "vector_launch_year": "None",
  "pricing": {
    "value": "https://www.activeloop.ai/pricing/ Free up to 200GB, then $100 per 30M embeddings (200GB) https://www.activeloop.ai/resources/deep-lake-hnsw-index-rapidly-query-35-m-vectors-save-80/",
    "source_url": "https://www.activeloop.ai/pricing/",
    "comment": ""
  },
  "rag": {
    "support": "",
    "source_url": "",
    "comment": "None"
  },
  "recsys": {
    "support": "",
    "source_url": "",
    "comment": "None"
  },
  "links": {
    "docs": "https://docs.activeloop.ai/",
    "github": "https://github.com/activeloopai/deeplake",
    "website": "https://www.activeloop.ai/",
    "vendor_discussion": "https://github.com/superlinked/VectorHub/discussions/26",
    "poc_github": "https://github.com/davidbuniat",
    "slug": "activeloop"
  },
  "embeddings_structured": {
    "support": "",
    "source_url": "",
    "comment": "None"
  }
}