{
  "name": "Pinecone",
  "links": {
    "docs": "https://docs.pinecone.io/",
    "github": "https://github.com/pinecone-io",
    "website": "https://www.pinecone.io/",
    "vendor_discussion": "https://github.com/superlinked/VectorHub/discussions/65",
    "poc_github": "https://edoliberty.github.io/",
    "slug": "pinecone"
  },
  "oss": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "license": {
    "value": "Proprietary",
    "source_url": "",
    "comment": ""
  },
  "dev_languages": {
    "value": [
      "rust"
    ],
    "source_url": "",
    "comment": ""
  },
  "vector_launch_year": 2019,
  "metadata_filter": {
    "support": "full",
    "source_url": "https://docs.pinecone.io/docs/metadata-filtering",
    "comment": ""
  },
  "hybrid_search": {
    "support": "full",
    "source_url": "https://docs.pinecone.io/docs/hybrid-search",
    "comment": "Supports full hybrid search and native support for SPLADE vectors"
  },
  "facets": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "geo_search": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "multi_vec": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "sparse_vectors": {
    "support": "full",
    "source_url": "https://docs.pinecone.io/docs/hybrid-search",
    "comment": "Supports all sparse vectors and native support for SPLADE vectors"
  },
  "bm25": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "full_text": {
    "support": "partial",
    "source_url": "",
    "comment": ""
  },
  "embeddings_text": {
    "support": "full",
    "source_url": "https://docs.pinecone.io/guides/get-started/overview#integrated-embedding",
    "comment": ""
  },
  "embeddings_image": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "embeddings_structured": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "rag": {
    "support": "full",
    "source_url": "https://docs.pinecone.io/guides/assistant/quickstart",
    "comment": ""
  },
  "recsys": {
    "support": "full",
    "source_url": "https://github.com/pinecone-io/recommender-example-typescript",
    "comment": ""
  },
  "langchain": {
    "support": "full",
    "source_url": "https://github.com/pinecone-io/examples/blob/master/docs/langchain-retrieval-agent.ipynb",
    "comment": ""
  },
  "llamaindex": {
    "support": "full",
    "source_url": "https://github.com/pinecone-io/examples/blob/master/learn/generation/llama-index/llama-index-intro.ipynb",
    "comment": ""
  },
  "managed_cloud": {
    "support": "full",
    "source_url": "",
    "comment": ""
  },
  "pricing": {
    "value": "full",
    "source_url": "https://www.pinecone.io/pricing/",
    "comment": "Includes free tier"
  },
  "in_process": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "multi_tenancy": {
    "support": "full",
    "source_url": "https://docs.pinecone.io/docs/multitenancy",
    "comment": "via namespaces"
  },
  "disk_index": {
    "support": "full",
    "source_url": "",
    "comment": ""
  },
  "ephemeral": {
    "support": "full",
    "source_url": "https://docs.pinecone.io/reference/api/2025-04/data-plane/deletenamespace",
    "comment": "Namespaces are lightweight and easy to create & delete as needed."
  },
  "sharding": {
    "support": "full",
    "source_url": "https://docs.pinecone.io/guides/index-data/dedicated-read-nodes",
    "comment": "Sharding is automatic for Serverless indexes. Only Dedicated Read Nodes require sharding specifications."
  },
  "doc_size": {
    "bytes": 40000,
    "unlimited": false,
    "source_url": "https://docs.pinecone.io/docs/limits",
    "comment": ""
  },
  "vector_dims": {
    "value": 20000,
    "unlimited": false,
    "source_url": "https://docs.pinecone.io/docs/limits",
    "comment": ""
  },
  "index_types": {
    "value": [
      "Proprietary"
    ],
    "source_url": "https://github.com/edoliberty/vector-search-class-notes",
    "comment": "Pinecone dynamically uses different indexes including clusteting, qunatization, graphs, hashing, and fast scans."
  },
  "github_stars": {
    "value": 0,
    "source_url": "",
    "comment": "",
    "value_90_days": 0
  },
  "docker_pulls": {
    "value": 0,
    "source_url": "",
    "comment": "",
    "value_90_days": 0
  },
  "pypi_downloads": {
    "value": 58981168,
    "source_url": "https://pypi.org/project/pinecone/",
    "comment": "Stats include also depricated pinecone-client package",
    "value_90_days": 25883142
  },
  "npm_downloads": {
    "value": 17368452,
    "source_url": "https://www.npmjs.com/package/@pinecone-database/pinecone",
    "comment": "",
    "value_90_days": 4191536
  },
  "crates_io_downloads": {
    "value": 3662,
    "source_url": "https://crates.io/crates/pinecone-rs",
    "comment": "",
    "value_90_days": 385
  }
}