{
  "name": "ClickHouse",
  "links": {
    "docs": "https://clickhouse.com/docs/knowledgebase/vector-search",
    "github": "https://github.com/ClickHouse/ClickHouse",
    "website": "https://clickhouse.com/",
    "vendor_discussion": "https://github.com/superlinked/VectorHub/discussions/100",
    "poc_github": "https://github.com/cwurm",
    "slug": "clickhouse"
  },
  "oss": {
    "support": "full",
    "source_url": "",
    "comment": ""
  },
  "license": {
    "value": "Apache 2.0",
    "source_url": "",
    "comment": ""
  },
  "dev_languages": {
    "value": [
      "c++"
    ],
    "source_url": "",
    "comment": ""
  },
  "vector_launch_year": 2022,
  "metadata_filter": {
    "support": "full",
    "source_url": "https://clickhouse.com/use-cases/machine-learning-and-data-science",
    "comment": ""
  },
  "hybrid_search": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "facets": {
    "support": "full",
    "source_url": "https://clickhouse.com/docs/knowledgebase/filtered-aggregates",
    "comment": "You can filter on a distance and aggregate or yes you can segment using If combinators."
  },
  "geo_search": {
    "support": "full",
    "source_url": "",
    "comment": ""
  },
  "multi_vec": {
    "support": "full",
    "source_url": "",
    "comment": "easily done by adding them as separate columns for each. e.g. CREATE TABLE titleVec Array(Float32), contentVec Array(Float32), title String, contentString ENGINE=MergeTree ORDER BY tuple()"
  },
  "sparse_vectors": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "bm25": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "full_text": {
    "support": "full",
    "source_url": "",
    "comment": ""
  },
  "embeddings_text": {
    "support": "partial",
    "source_url": "https://clickhouse.com/docs/en/sql-reference/functions/udf",
    "comment": "possible to load an embedding model as a UDF"
  },
  "embeddings_image": {
    "support": "partial",
    "source_url": "",
    "comment": "possible to load an embedding model as a UDF"
  },
  "embeddings_structured": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "rag": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "recsys": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "langchain": {
    "support": "full",
    "source_url": "",
    "comment": ""
  },
  "llamaindex": {
    "support": "full",
    "source_url": "",
    "comment": ""
  },
  "managed_cloud": {
    "support": "full",
    "source_url": "",
    "comment": ""
  },
  "pricing": {
    "value": "Clickhouse Pricing",
    "source_url": "https://clickhouse.com/pricing",
    "comment": ""
  },
  "in_process": {
    "support": "partial",
    "source_url": "https://github.com/chdb-io/chdb",
    "comment": "chDB is an embedded version of ClickHouse. It is a separate, independent project - not maintained by ClickHouse."
  },
  "multi_tenancy": {
    "support": "full",
    "source_url": "https://clickhouse.com/docs/en/operations/access-rights",
    "comment": "with RBAC and row-level security"
  },
  "disk_index": {
    "support": "full",
    "source_url": "https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/annindexes",
    "comment": "Via Usearch"
  },
  "ephemeral": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "sharding": {
    "support": "full",
    "source_url": "",
    "comment": "sharding applicable to both vector and index storage"
  },
  "doc_size": {
    "bytes": 0,
    "unlimited": true,
    "source_url": "",
    "comment": ""
  },
  "vector_dims": {
    "value": 0,
    "unlimited": true,
    "source_url": "",
    "comment": ""
  },
  "github_stars": {
    "value": 34209,
    "source_url": "https://github.com/ClickHouse/ClickHouse",
    "comment": "",
    "value_90_days": 0
  },
  "docker_pulls": {
    "value": 0,
    "source_url": "",
    "comment": "",
    "value_90_days": 0
  },
  "pypi_downloads": {
    "value": 186784,
    "source_url": "https://pypi.org/project/clickhouse/",
    "comment": "",
    "value_90_days": 6509
  },
  "npm_downloads": {
    "value": 3692970,
    "source_url": "https://www.npmjs.com/package/@clickhouse/client",
    "comment": "",
    "value_90_days": 1663551
  },
  "crates_io_downloads": {
    "value": 272063,
    "source_url": "https://crates.io/crates/clickhouse",
    "comment": "",
    "value_90_days": 74224
  }
}