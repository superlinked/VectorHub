{
  "name": "ApertureDB",
  "links": {
    "docs": "https://docs.aperturedata.io/",
    "github": "https://github.com/aperture-data",
    "website": "https://www.aperturedata.io/",
    "vendor_discussion": "https://github.com/superlinked/VectorHub/discussions/95",
    "poc_github": "https://github.com/luisremis",
    "slug": "aperturedb"
  },
  "oss": {
    "support": "partial",
    "source_url": "https://hub.docker.com/r/aperturedata/aperturedb-community",
    "comment": "ApertureDB community edition is free and a great way to test all the database features, locally."
  },
  "license": {
    "value": "Proprietary",
    "source_url": "https://github.com/aperture-data",
    "comment": "ApertureDB code is proprietary but we have open source clients, dataset, and applications repositories."
  },
  "dev_languages": {
    "value": [
      "c++"
    ],
    "source_url": "https://github.com/aperture-data",
    "comment": ""
  },
  "vector_launch_year": 2021,
  "metadata_filter": {
    "support": "full",
    "source_url": "https://docs.aperturedata.io/concepts/Schema",
    "comment": "Complete graph database support alongside vector search"
  },
  "hybrid_search": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "facets": {
    "support": "full",
    "source_url": "https://docs.aperturedata.io/query_language/Reference/shared_command_parameters/results",
    "comment": "Results can be aggregated on property values"
  },
  "geo_search": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "multi_vec": {
    "support": "partial",
    "source_url": "https://docs.aperturedata.io/HowToGuides/Applications/similarity_search#all-of-the-above-and-some-more-can-be-done-by-executing-this-through-adb-cli",
    "comment": "You can attach multiple embeddings per source of data for multimodal data types in different embeddings collections or within the same (regions of interest or full data embeddings)."
  },
  "sparse_vectors": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "bm25": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "full_text": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "embeddings_text": {
    "support": "full",
    "source_url": "https://docs.aperturedata.io/HowToGuides/Ingestion/Updates#transformations-while-loading",
    "comment": "You can plug-in user-defined or off-the-shelf text embedding models when adding text blobs in the form of new generators"
  },
  "embeddings_image": {
    "support": "full",
    "source_url": "https://docs.aperturedata.io/HowToGuides/Ingestion/Updates#transformations-while-loading",
    "comment": "You can plug-in user-defined or off-the-shelf image embedding models when adding images to introduce any number of embedding per image, in different collections"
  },
  "embeddings_structured": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "rag": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "recsys": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "langchain": {
    "support": "full",
    "source_url": "https://docs.aperturedata.io/Integrations/langchain_howto",
    "comment": ""
  },
  "llamaindex": {
    "support": "partial",
    "source_url": "https://github.com/aperture-data/llama_index",
    "comment": "Yet to contribute upstream but deployed with customer"
  },
  "managed_cloud": {
    "support": "full",
    "source_url": "https://cloud.aperturedata.io/",
    "comment": "VPC options and community edition available as well"
  },
  "pricing": {
    "value": "Instance-based hourly (cloud) or annual (VPC) pricing with free trial",
    "source_url": "http://aperturedata.io/pricing",
    "comment": "Priced generally by number of database instances, support level, and resource tier. Free trial and cloud pricing are on website. Custom pricing for VPC deployments."
  },
  "in_process": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "multi_tenancy": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "disk_index": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "ephemeral": {
    "support": "partial",
    "source_url": "",
    "comment": "Not documented externally."
  },
  "sharding": {
    "support": "partial",
    "source_url": "",
    "comment": "Not documented externally."
  },
  "doc_size": {
    "bytes": 0,
    "unlimited": true,
    "source_url": "https://docs.aperturedata.io/administration/Configuring%20ApertureDB",
    "comment": "You can store large or small files but need to change the `max_connection_message_size_mb` for adding or querying files larger than 256MB. For very large files like GBs of video, it will require optimizations to send over network or would be slow."
  },
  "vector_dims": {
    "value": 0,
    "unlimited": true,
    "source_url": "https://docs.aperturedata.io/query_language/reference/descriptor_commands/desc_set_commands/AddDescriptorSet",
    "comment": "Unlimited. Currently tested up to 4096 dims"
  },
  "index_types": {
    "value": [
      "HNSW",
      "FLAT",
      "IVF"
    ],
    "source_url": "https://docs.aperturedata.io/query_language/Reference/descriptor_commands/desc_set_commands/AddDescriptorSet#details",
    "comment": "New indexes introduced as needed. Multiple distance metrics supported."
  },
  "github_stars": {
    "value": 0,
    "source_url": "",
    "comment": "",
    "value_90_days": 0
  },
  "docker_pulls": {
    "value": 0,
    "source_url": "",
    "comment": "",
    "value_90_days": 0
  },
  "pypi_downloads": {
    "value": 251506,
    "source_url": "https://pypi.org/project/aperturedb/",
    "comment": "",
    "value_90_days": 29797
  },
  "npm_downloads": {
    "value": 13686,
    "source_url": "https://www.npmjs.com/package/aperture",
    "comment": "",
    "value_90_days": 1937
  },
  "crates_io_downloads": {
    "value": 0,
    "source_url": "",
    "comment": "",
    "value_90_days": 0
  }
}