{
  "name": "Hyperspace",
  "links": {
    "docs": "https://docs.hyper-space.io/hyperspace-docs",
    "github": "https://github.com/hyper-space-io/",
    "website": "https://www.hyper-space.io/",
    "poc_github": "https://github.com/YanivHyper-Space",
    "slug": "hyper-space"
  },
  "oss": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "license": {
    "value": "Hyper-space-2.0",
    "source_url": "",
    "comment": ""
  },
  "dev_languages": {
    "value": [
      "python",
      "java"
    ],
    "source_url": "",
    "comment": ""
  },
  "vector_launch_year": 2023,
  "metadata_filter": {
    "support": "full",
    "source_url": "https://docs.hyper-space.io/hyperspace-docs/flows/data-collections/python-query-interface/candidate-filtering",
    "comment": ""
  },
  "hybrid_search": {
    "support": "full",
    "source_url": "https://docs.hyper-space.io/hyperspace-docs/reference/hyperspace-hybrid-search#hybrid-search",
    "comment": "Support complex logic, including mutliplication and division of vector and keyword based scores. No limitations on numer of keyword fields or vector fields"
  },
  "facets": {
    "support": "partial",
    "source_url": "https://docs.hyper-space.io/hyperspace-docs/flows/data-collections/python-query-interface/aggregations",
    "comment": ""
  },
  "geo_search": {
    "support": "full",
    "source_url": "https://docs.hyper-space.io/hyperspace-docs/flows/es-dsl-query-interface/candidate-filtering#match-between-geo-coordinates",
    "comment": ""
  },
  "multi_vec": {
    "support": "full",
    "source_url": "https://docs.hyper-space.io/hyperspace-docs/flows/setting-up/building-and-running-queries/building-a-vector-search-query",
    "comment": "can support large number of vectors in same query"
  },
  "sparse_vectors": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "bm25": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "full_text": {
    "support": "partial",
    "source_url": "https://docs.hyper-space.io/hyperspace-docs/flows/data-collections/python-query-interface/candidate-filtering#exact-match-between-keywords",
    "comment": ""
  },
  "embeddings_text": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "embeddings_image": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "embeddings_structured": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "rag": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "recsys": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "langchain": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "llamaindex": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "managed_cloud": {
    "support": "full",
    "source_url": "",
    "comment": ""
  },
  "pricing": {
    "value": "Per usage",
    "source_url": "",
    "comment": ""
  },
  "in_process": {
    "support": "full",
    "source_url": "",
    "comment": ""
  },
  "multi_tenancy": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "disk_index": {
    "support": "",
    "source_url": ""
  },
  "ephemeral": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "sharding": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "doc_size": {
    "bytes": 100M,
    "unlimited": false,
    "source_url": "",
    "comment": ""
  },
  "vector_dims": {
    "value": 8192,
    "unlimited": false,
    "source_url": "",
    "comment": ""
  },
  "docker_pulls": {
    "value": 0,
    "source_url": "",
    "comment": "",
    "value_90_days": 0
  },
  "pypi_downloads": {
    "value": 0,
    "source_url": "",
    "comment": "",
    "value_90_days": 0
  },
  "npm_downloads": {
    "value": 0,
    "source_url": "",
    "comment": "",
    "value_90_days": 0
  },
  "crates_io_downloads": {
    "value": 0,
    "source_url": "",
    "comment": "",
    "value_90_days": 0
  }
}
