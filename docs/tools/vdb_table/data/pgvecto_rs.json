{
  "name": "pgvecto.rs",
  "links": {
    "docs": "https://docs.pgvecto.rs/",
    "github": "https://github.com/tensorchord/pgvecto.rs",
    "website": "https://docs.pgvecto.rs/",
    "vendor_discussion": "",
    "poc_github": "https://github.com/kemingy",
    "slug": "pgvecto.rs"
  },
  "oss": {
    "support": "full",
    "source_url": "",
    "comment": ""
  },
  "license": {
    "value": "Apache-2.0",
    "source_url": "https://github.com/tensorchord/pgvecto.rs/blob/main/LICENSE",
    "comment": ""
  },
  "dev_languages": {
    "value": [
      "rust"
    ],
    "source_url": "",
    "comment": ""
  },
  "vector_launch_year": 2023,
  "metadata_filter": {
    "support": "full",
    "source_url": "",
    "comment": ""
  },
  "hybrid_search": {
    "support": "full",
    "source_url": "https://docs.pgvecto.rs/use-case/hybrid-search.html",
    "comment": ""
  },
  "facets": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "geo_search": {
    "support": "partial",
    "source_url": "",
    "comment": "Postgis"
  },
  "multi_vec": {
    "support": "full",
    "source_url": "",
    "comment": ""
  },
  "sparse_vectors": {
    "support": "full",
    "source_url": "https://docs.pgvecto.rs/use-case/sparse-vector.html",
    "comment": "v0.3.0"
  },
  "bm25": {
    "support": "partial",
    "source_url": "https://docs.pgvecto.rs/use-case/hybrid-search.html",
    "comment": "Support scoring by TF, fully BM25 support can be achieved by the https://github.com/paradedb/paradedb/tree/dev/pg_search extension."
  },
  "full_text": {
    "support": "full",
    "source_url": "https://www.postgresql.org/docs/current/textsearch.html",
    "comment": "via core Postgres and GIST"
  },
  "embeddings_text": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "embeddings_image": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "embeddings_structured": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "rag": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "recsys": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "langchain": {
    "support": "full",
    "source_url": "https://python.langchain.com/docs/integrations/vectorstores/pgvecto_rs/",
    "comment": ""
  },
  "llamaindex": {
    "support": "full",
    "source_url": "https://docs.llamaindex.ai/en/stable/examples/vector_stores/PGVectoRsDemo/",
    "comment": ""
  },
  "managed_cloud": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "pricing": {
    "value": "",
    "source_url": "",
    "comment": ""
  },
  "in_process": {
    "support": "none",
    "source_url": "",
    "comment": ""
  },
  "multi_tenancy": {
    "support": "full",
    "source_url": "https://docs.pgvecto.rs/use-case/multi-tenancy.html",
    "comment": ""
  },
  "disk_index": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "ephemeral": {
    "support": "",
    "source_url": "",
    "comment": ""
  },
  "sharding": {
    "support": "none",
    "source_url": "",
    "comment": "While pgvecto.rs does not provide this natively, you can get this either from PostgreSQL functionality like \"postgres_fdw\" or from extensions. You can also choose to subdivide your index through partitioning."
  },
  "doc_size": {
    "bytes": 0,
    "unlimited": true,
    "source_url": "",
    "comment": ""
  },
  "vector_dims": {
    "value": 65535,
    "unlimited": false,
    "source_url": "",
    "comment": ""
  },
  "github_stars": {
    "value": 1389,
    "source_url": "https://github.com/tensorchord/pgvecto.rs",
    "comment": "",
    "value_90_days": 0
  },
  "docker_pulls": {
    "value": 1972691,
    "source_url": "https://hub.docker.com/r/tensorchord/pgvecto-rs",
    "comment": "",
    "value_90_days": 0
  },
  "pypi_downloads": {
    "value": 13408,
    "source_url": "https://pypi.org/project/pgvecto-rs/",
    "comment": "",
    "value_90_days": 9603
  },
  "npm_downloads": {
    "value": 0,
    "source_url": "",
    "comment": "",
    "value_90_days": 0
  },
  "crates_io_downloads": {
    "value": 0,
    "source_url": "",
    "comment": "",
    "value_90_days": 0
  }
}